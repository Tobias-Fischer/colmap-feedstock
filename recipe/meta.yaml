{% set name = "colmap" %}
{% set version = "3.7" %}
{% set build = 5 %}

{% set processor = "cpu" if cuda_compiler_version == "None" else "gpu" %}  # [not osx]
{% set processor = "cpu" %}  # [osx]

# Prioritize gpu build if cudatoolkit can be installed (through __cuda virtual package)
{% set build = build + 100 if processor == "gpu" else build %}

package:
  name: {{ name }}
  version: {{ version }}

source:
  - url: https://github.com/{{ name }}/{{ name }}/archive/{{ version }}.tar.gz
    sha256: ceb7cca204550d65b890cd0082c66f4bc69193daf9da64616d8147a46b76cc55
    patches:
      - fix_build.patch

build:
  number: {{ build }}
  skip: true  # [win or (osx and cuda_compiler_version != "None")]
  string: {{ processor }}h{{ PKG_HASH }}_{{ build }}
  run_exports:
    - {{ pin_subpackage('colmap', max_pin='x.x') }}

requirements:
  build:
    - {{ compiler('cxx') }}
    - {{ compiler('c') }}
    - {{ compiler('cuda') }}         # [not osx and cuda_compiler_version != "None"]
    - cmake
    - make                           # [unix]
    - pkg-config
    - ninja
    - llvm-openmp                    # [osx]
    - libgomp                        # [linux]
    # x11 stuff
    - {{ cdt('mesa-libgl-devel') }}  # [unix and not arm64]
    - {{ cdt('mesa-dri-drivers') }}  # [unix and not arm64]
    - {{ cdt('libselinux') }}        # [linux]
    - {{ cdt('libxcb') }}            # [linux]
    - {{ cdt('libxdamage') }}        # [linux]
    - {{ cdt('libxfixes') }}         # [linux]
    - {{ cdt('libxxf86vm') }}        # [linux]
    - {{ cdt('libxext') }}           # [linux]
    - {{ cdt('libxau') }}            # [linux]
    - {{ cdt('expat-devel') }}       # [linux]
  host:
    # x11 stuff
    - xorg-libxext                   # [unix]
    - xorg-libxdmcp                  # [unix]
    - xorg-libxau                    # [unix]
    - libxcb                         # [unix]
    - xorg-libxfixes                 # [unix]
    - xorg-libxrender                # [unix]
    - xorg-libx11                    # [unix]
    - xorg-libice                    # [unix]
    - xorg-libsm                     # [unix]
    - libglu                         # [linux]
    # deps
    - boost-cpp
    - suitesparse
    - eigen
    - freeimage
    - glog
    - gflags
    - glew
    - cgal-cpp
    - ceres-solver
    - qt-main
    - git
    - flann
    - sqlite
    - vlfeat
    - gmp                            # [unix]
  run:
    - boost-cpp
    - vlfeat
    - flann
    - xorg-libxext                   # [unix]
    - xorg-libxdmcp                  # [unix]
    - xorg-libxau                    # [unix]
    - libxcb                         # [unix]
    - xorg-libxfixes                 # [unix]
    - xorg-libxrender                # [unix]
    - xorg-libx11                    # [unix]
    - xorg-libice                    # [unix]
    - xorg-libsm                     # [unix]
    - libglu                         # [linux]
    - __cuda >={{ cuda_compiler_version }}  # [not osx and cuda_compiler_version != "None"]

test:
  commands:
    - if exist %PREFIX%\\Library\\bin\\colmap.exe (exit 0) else (exit 1)  # [win]
    - test -f $PREFIX/bin/colmap  # [unix]
    - test -f $PREFIX/lib/colmap/libcolmap.a  # [unix]
    - test -f $PREFIX/lib/colmap/libcolmap_cuda.a  # [unix and cuda_compiler_version != "None"]
    - test -f $PREFIX/share/colmap/COLMAPConfig.cmake  # [unix]

about:
  home: https://colmap.github.io/
  license: BSD-3-Clause
  license_file:
    - COPYING.txt
    - lib/Graclus/LICENSE
    - lib/LSD/LICENSE
    - lib/PBA/LICENSE
    - lib/PoissonRecon/LICENSE
    - lib/SiftGPU/LICENSE
  summary: COLMAP is a general-purpose Structure-from-Motion (SfM) and Multi-View Stereo (MVS) pipeline with a graphical and command-line interface.

extra:
  recipe-maintainers:
    - Tobias-Fischer
